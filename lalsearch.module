<?php
include('FeedParser.php'); 

function lalsearch_help($path, $arg) {
  $output = '';
  switch ($path) {
    case "admin/help#lalsearch":
      $output = '<p>'.  t("Searches into LAL metadata repository") .'</p>';
      break;
  }
  return $output;
}

function lalsearch_block($op = 'list', $delta = 0) {  
  $block = array();
  if ($op == "list") {
    $block[0]['info'] = t('LAL Search');
    return $block;
  } 
  else if ($op == "view") {
    $block['subject'] = "Search results";
    $block['content'] = lalsearch_side_search();
    return $block;
  }
  return $block;
} 

function lalsearch_perm() {
  return array('accesss LAL metadata content');
} 

function lalsearch_admin() {
  $form = array();
  
  $form['lalsearch_maxresults'] = array(
    '#type' => 'textfield',
    '#title' => t('Maximum number of results'),
    '#default_value' => variable_get('lalserach_maxresults', 20),
    '#size' => 2,
    '#maxlength' => 2,
    '#description' => t('The maximum number of search results per page'),
    '#required' => TRUE,
  );
  
  $form['lalsearch_server'] = array(
    '#type' => 'textfield',
    '#title' => t('LAL server'),
    '#default_value' => variable_get('lalsearch_server', 'localhost'),
    '#size' => 40,
    '#maxlength' => 256,
    '#description' => t('The server name or IP address for LAL engine'),
    '#required' => TRUE,
  );
  
  return system_settings_form($form);
}

function lalsearch_menu() {
  $items = array();
	
  $items['admin/settings/lalsearch'] = array(
  	'title' => t('LAL search module settings'),
  	'description' => t('LAL search module settings page'),
  	'page callback' => 'drupal_get_form',
  	'page arguments' => array('lalsearch_admin'),
  	'access arguments' => array('access administration pages'),
  	'type' => MENU_NORMAL_ITEM,
  );
  
  $items['lalsearch'] = array(
  	'title' => 'LAL search',
  	'page callback' => 'lalsearch_lal_searchpage',
  	'access arguments' => array('accesss LAL metadata content'),
  	'type' => MENU_CALLBACK,
  );
  
  return $items;
}

function lalsearch_admin_validate($form, &$form_state) {
	$maxresults = $form_state['values']['lalsearch_maxresults'];
	if (!is_numeric($maxresults)) {
		form_set_error('lalsearch_maxresults',t('You must enter an integer for the maximum number of results'));
	}
	else if ($maxresults <= 0) {
		form_set_error('lalsearch_maxresults', t('Maximum number of results must be positive'));
	}
}


function lalsearch_lal_searchpage() {
	$page_data = '';
	$search = $_GET['search'];
	if ($search) {
		$page_data .= '<h3>Results for query "'. $_GET['search'] .'": </h3>';
		$server = variable_get('lalsearch_server','localhost');
		$page_data .= "server = " . $server . "</br>";		
		$query['query'] = array( 'q' => $search );
		$url = url('http://' . $server . '/content/kepler/index.documents.atom', $query);
		$page_data .= $url . '</br>';
		$atom_parser = new FeedParser();
		$atom_parser->parse($url);
		#$channels = $atom_parser->getChannels();
		$items = $atom_parser->getItems();
		foreach($items as $item):
			$page_data .= '<p>' . $item['TITLE'] . '</p>';
		endforeach;
	} else {
		$page_data = '<p>No search made</p>';
	}
	return $page_data;
}

function lalsearch_side_search() {
	return drupal_get_form('lalsearch_side_search_form');
}

function lalsearch_side_search_form() {
	$form['search'] = array(
		'#type' => 'textfield',
		'#title' => t('Enter search string'),
	);
	$form['submit'] = array(
		'#type' => 'submit',
		'#value' => t('Search'),
	);
	return $form;
}

function lalsearch_side_search_form_submit($form_id, &$form_values) {
#	$message = 'You have submitted the ' . $form_id . ' with the data: ' . print_r($form_values, true) . '</pre>';
#	drupal_set_message(t($message));
	$form_values['redirect'] = array('lalsearch', 'search=' . $form_values['values']['search']);
}

